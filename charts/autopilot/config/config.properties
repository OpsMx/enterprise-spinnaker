kubernetes.prometheus.metric.label=__name__
kubernetes.prometheus.host.tagname=exported_container_label_io_kubernetes_pod_name
kubernetes.prometheus.tomcat.host.tagname=container_label_io_kubernetes_pod_name
aws.prometheus.host.tagname=instance
aws.prometheus.baseline.host.tagvalue=version2a
aws.prometheus.canary.host.tagvalue=version2b


prometheus.metrics.api.path=/api/v1/label/__name__/values
prometheus.metrics.aggregator=avg
prometheus.metrics.sampling.value=10
prometheus.metrics.rate.duration=60s
#true always taking cluster name, false always taking pod names
prometheus.cluster.name=false
isPodFinderEnabled=false

prometheus.services=apache,haproxy,http,tomcat
stackdriver.services=tomcat
elastic.search.services=apache,tomcat
#datadog.services=tomcat (datadog services are being read from datadog api by truncating the prefix of each metric name
#custom.service.dropdown.value=Custom service

#Reading hibernate.cfg.xml from file system
hibernate.configFilePath=/opt/opsmx/hibernate.cfg.xml

#aws.prometheus.hostname=
server.protocol=http://
#server.host.dns.name=https://autopilotk8s.opsmx.com:30161
#server.host.dns.name=https://analyzer.opsmx.com
reporting.server.url=/opsmx-analysis/public/canaryAnalysis.html#/analysis/
casservice.baseurl=localhost:8090
metricservice.baseurl=localhost:9090

elastic.search.metrics.template.path=/opt/opsmx/elasticsearch_template_format.json
elasticsearch.metrics.sampling.value=10
elastic.search.query.template.path=/opt/opsmx/elasticsearch_metric_query_template.json
elastic.search.metrics.index.path=/opt/opsmx/elasticsearch_index_template.json
elastic.search.kibana.url=http://34.211.233.166:5601/app/kibana#/discover?_g=()&_a=(columns:!(_source),index:METRIC_INDEX,interval:auto,query:(language:lucene,query:''),sort:!('@timestamp',desc))

#Required details for log analysis
home.directory=/home/ubuntu/
logfiles.base.path=/home/ubuntu/logdata/
k8.logpulling.url=
k8.logpulling.username=admin
k8.logpulling.password=
k8.query.keyword=kubernetes.pod_name.keyword
k8.config.filepath=/home/ubuntu/.kube/
elasticsearch.k8.log.query.file.path=/opt/opsmx/base-templates/elasticsearch/elasticsearch_log_query.json
elasticsearch.log.query.file.path=/opt/opsmx/base-templates/elasticsearch/elasticsearch_log_query.json
elasticsearch.logpulling.url=/_search?scroll=2m
dockerswarm.logpulling.scroll.url=/_search/scroll
dockerswarm.query.file.path=/opt/opsmx/base-templates/elasticsearch/elasticsearch_swarmlog_query.json
elasticsearch.query.keyword=container_id.keyword
elasticsearch.response.keywords=message,exception.exception_message,log
elasticsearch.log.filesize.in.MB=100
log.template=log-template
metric.template=metric-template
log.analysis.file=/home/ubuntu/logdata/logAnalysis.py
canary.analysis.filepath=/home/ubuntu/Python-code/canary/canaryplusversion.py
log.feedback.analysis.file=/home/ubuntu/logdata/feedbackAnalysis.py
python.version=python

newrelic.metric.template.filter.params=WebTransaction(.*)GET(.*),WebTransaction(.+)POST(.*),WebTransaction(.+)PUT(.*),WebTransaction(.+)DELETE(.*),WebTransaction(.+)PATCH(.*)
newrelic.metrics.template.path=/opt/opsmx/base-templates/newrelic/newrelic-apm-rest.json
#newrelic.metric.template.filter.param=/greeting
newrelic.group.metric.delimiter=;

#datadog metric analysis required details
datadog.metric.tag=host
datadog.metrics.template.path=/opt/opsmx/base-templates/datadog/
datadog.infra.metrics.template.path=/opt/opsmx/base-templates/datadog/infra.json
datadog.timeseries.metricdata.client.url=https://api.datadoghq.com/api/v1/query

canary.default.minscore=80
canary.default.maxscore=90
metricdata.fetcher.url=http://localhost:9090/metricdata
monitoring.service.baseurl=http://localhost:9090

basedata.filepath=/home/ubuntu/BaseData/USER_NAME_PLACE_HOLDER/TEMPLATE_NAME_PLACE_HOLDER/Data
#time period is in hours
basedata.time.period=-24
system.r.path=/usr/bin/Rscript
weights.computation.filepath=/home/ubuntu/long_term_weights.R

sonar.metrics.file.path=/opt/opsmx/base-templates/sonar/sonar_metrics.json

spinnaker.login.admin.enabled=false
spinnaker.baseurl=http://spin-gate:8084
spinnaker.login.admin.username=OpsMxUser
spinnaker.login.admin.password=OpsMx@123

spring.datasource.url={{ .Values.autopilot.config.dbUrl }}
spring.datasource.username=postgres
spring.datasource.password=networks123

#ldap login attributes
isLdapAuthEnabled=false
ldap.url={{ .Values.autopilot.config.ldapUrl }}
ldap.base.dn=dc=example,dc=org
ldap.user.filter.pattern=(&(cn=USERNAME))
#ldap.user.filter.pattern=(&(objectclass=person)(cn=USERNAME))
#ldap.admin.user.groups=Administrators

#SSL certificate details
# server.ssl.key-store: keystore.p12
# server.ssl.key-store-password: OpsMx@123
# server.ssl.keyStoreType: PKCS12
# server.ssl.keyAlias: tomcat
