apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "spinnaker.fullname" . }}-spin-pipeline-import
  labels:
{{ include "spinnaker.standard-labels" . | indent 4 }}
data:
  spin-pipeline-import.sh: |-
    #!/bin/bash
    echo \"Waiting for all Spinnaker Services to come-up\"
    wait_period=0
    while true
    do
    kubectl get po -n {{ .Release.Namespace }} -o jsonpath='{range .items[*]}{..metadata.name}{"\t"}{..containerStatuses..ready}{"\n"}{end}' > /tmp/inst.status
    CLOUDRO=$(grep spin-clouddriver-ro /tmp/inst.status |grep -v deck | awk '{print $2}')
    CLOUDRODECK=$(grep spin-clouddriver-ro-deck /tmp/inst.status | awk '{print $2}')
    CLOUDRW=$(grep spin-clouddriver-rw /tmp/inst.status | awk '{print $2}')
    CLOUDCACHING=$(grep spin-clouddriver-caching /tmp/inst.status | awk '{print $2}')
    DECK=$(grep spin-deck /tmp/inst.status | awk '{print $2}')
    ECHOWORKER=$(grep spin-echo-worker /tmp/inst.status | awk '{print $2}')
    ECHOSCHEDULER=$(grep spin-echo-scheduler  /tmp/inst.status | awk '{print $2}')
    FRONT=$(grep spin-front /tmp/inst.status  | awk '{print $2}')
    GATE=$(grep spin-gate /tmp/inst.status | awk '{print $2}')
    IGOR=$(grep spin-igor /tmp/inst.status | awk '{print $2}')
    ORCA=$(grep spin-orca /tmp/inst.status | awk '{print $2}')
    ROSCO=$(grep spin-rosco /tmp/inst.status | awk '{print $2}')
    SAPOR=$(grep oes-sapor /tmp/inst.status | awk '{print $2}')
    PLATFORM=$(grep oes-platform /tmp/inst.status | awk '{print $2}')
    
    wait_period=$(($wait_period+10))

    if [ $DECK == "true" ] && [ $CLOUDCACHING == "true" ] && [ $CLOUDRO == "true" ] && [ $CLOUDRW == "true" ] && [ $CLOUDRODECK == "true" ] && [ $FRONT == "true" ] && [ $GATE == "true" ] && [ $IGOR == "true" ] && [ $ORCA == "true" ] && [ $ROSCO == "true" ] && [ $ECHOWORKER == "true" ] && [ $ECHOSCHEDULER == "true" ];
    then
        if [ -z "$SAPOR" ] && [ -z "$PLATFORM" ];
        then
             echo \"Spinnaker is Installed and ready\"
             mkdir -p /tmp/config/git/
             git clone https://github.com/OpsMx/sample-pipelines.git /tmp/config/git/
             cd /tmp/config/git
             cp -p /tmp/config/spin/config .
             sed 's/$/ --config config/' create-app.sh >create-app1.sh
             bash -xe create-app1.sh
             break
        elif [ $SAPOR == "true" ] && [ $PLATFORM == "true" ]
        then
             echo \"Spinnaker and OES is Installed and ready\"
             mkdir -p /tmp/config/git/
             git clone https://github.com/OpsMx/sample-pipelines.git /tmp/config/git/
             cd /tmp/config/git
             cp -p /tmp/config/spin/config .
             sed 's/$/ --config config/' create-app.sh >create-app1.sh
             bash -xe create-app1.sh
             break             
        else
             echo \"Waiting for Sapor and Platform Services\"
             continue
        fi
    else
        if [ $wait_period -gt 1800 ];
        then
            echo \"Script is timed as the Spinnaker is not ready yet.......\"
            break
        else
            echo \"Waiting for Spinnaker services to be ready\"
            sleep 1m
        fi
    fi
    done
