{{ if .Values.spinnaker.gitopsHalyard.enabled }}
{{- if (eq .Values.spinnaker.gitopsHalyard.secretName "opsmx-gitops-auth") }}
apiVersion: v1
stringData:
  # Repo uri to fetch halyard configuration
  {{- if (eq .Values.spinnaker.gitopsHalyard.repo.type "git") }}
  gitcloneparam: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.username }}:{{ .Values.spinnaker.gitopsHalyard.repo.token }}@{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.repository }}.git" .) }}

  # Repo details to fetch dynamic configuration
  dynamicaccountsgituri: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.dynamicAccRepository }}.git" .) }}
  gituser: {{ .Values.spinnaker.gitopsHalyard.repo.username }}
  gittoken: {{ .Values.spinnaker.gitopsHalyard.repo.token }}
  {{- end }}

  {{- if (eq .Values.spinnaker.gitopsHalyard.repo.type "stash") }}
  {{- if (eq .Values.spinnaker.gitopsHalyard.repo.projectName "") }}
  gitcloneparam: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.username }}:{{ .Values.spinnaker.gitopsHalyard.repo.token }}@{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.repository }}.git" .) }}

  # Repo details to fetch dynamic configuration
  dynamicaccountsgituri: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.dynamicAccRepository }}.git" .) }}
  gituser: {{ .Values.spinnaker.gitopsHalyard.repo.username }}
  gittoken: {{ .Values.spinnaker.gitopsHalyard.repo.token }}
  {{- else if (ne .Values.spinnaker.gitopsHalyard.repo.projectName "") }}
  gitcloneparam: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.username }}:{{ .Values.spinnaker.gitopsHalyard.repo.token }}@{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.projectName }}/{{ .Values.spinnaker.gitopsHalyard.repo.repository }}.git" .) }}

  # Repo details to fetch dynamic configuration
  dynamicaccountsgituri: {{ urlquery (tpl "https://{{ .Values.spinnaker.gitopsHalyard.repo.baseUrlHostName }}/{{ .Values.spinnaker.gitopsHalyard.repo.organization }}/{{ .Values.spinnaker.gitopsHalyard.repo.projectName }}/{{ .Values.spinnaker.gitopsHalyard.repo.dynamicAccRepository }}.git" .) }}
  gituser: {{ .Values.spinnaker.gitopsHalyard.repo.username }}
  gittoken: {{ .Values.spinnaker.gitopsHalyard.repo.token }}
  {{- end }}
  {{- end }}

  {{- if (eq .Values.spinnaker.gitopsHalyard.repo.type "s3") }}
  s3accesskey: {{ .Values.spinnaker.gitopsHalyard.repo.s3accesskey }}
  s3secretkey: {{ .Values.spinnaker.gitopsHalyard.repo.s3secretkey }}
  s3bucket: {{ .Values.spinnaker.gitopsHalyard.repo.s3bucket }}
  s3region: {{ .Values.spinnaker.gitopsHalyard.repo.s3region }}
  {{- end }}

kind: Secret
metadata:
  name: {{ .Values.spinnaker.gitopsHalyard.secretName }}
type: Opaque
{{- end -}}
{{ end }}
