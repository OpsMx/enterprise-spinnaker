{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "isd.standard-annotations" . | indent 4 }}
  labels:
    app: oes
    component: gate
{{ include "oes.standard-labels" . | indent 4 }}
  name: oes-gate
spec:
  replicas: {{ .Values.gate.replicas }}
  selector:
    matchLabels:
      app: oes
      component: gate
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets/oes-gate-configmap.yaml") . | sha256sum }}
{{- if .Values.gate.annotations -}}
        {{ toYaml .Values.gate.annotations | nindent 8 }}
{{- end }}
      labels:
{{ toYaml .Values.gate.labels | indent 8 }}
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      {{- if .Values.global.autoConfiguration.enabled }}
      initContainers:
      - env:
        - name: EXTERNAL_IP_CHECK_DELAY
          value: "{{ .Values.global.autoConfiguration.initContainer.externalIpCheckDelay}}"
        image: {{ .Values.global.autoConfiguration.initContainer.image}}
        imagePullPolicy: {{ .Values.global.autoConfiguration.initContainer.pullPolicy}}
        name: gate-autoconfig
        command: ["/home/config_endpoint.sh"]
        args: ["oes-gate"]
        volumeMounts:
        - mountPath: /config/gate.yml
          name: config-temp
          subPath: gate.yml
        - mountPath: /opt/spinnaker/config
          name: gate-volume
      {{- end }}
      containers:
      - image: {{ template "gate.image" . }}
        name: oes-gate
        env:
        - name: spring_profiles_active
          value: vault,local
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        ports:
        - containerPort: 8084
          protocol: TCP
          resources:
  {{ toYaml .Values.gate.resources | indent 12 }}
        volumeMounts:
        - name: gate-volume
          mountPath: /opt/spinnaker/config/gate.yml
          subPath: gate.yml
        - mountPath: /opt/spinnaker/config/bootstrap.yml
          name: bootstrap-volume
          subPath: bootstrap.yml
        {{- if .Values.gate.config.saml.enabled }}
        - mountPath: {{ .Values.gate.config.saml.keyStore }}
          name: saml-jks
          subPath: oessaml.jks
        - mountPath: {{ .Values.gate.config.saml.metadataUrl }}
          name: metadata-xml
          subPath: oesmetadata.xml
        {{- end }}
        {{- if .Values.global.customCerts.enabled }}
        - mountPath: /etc/pki/ca-trust/extracted/java/cacerts
          subPath: cacerts
          name: cacerts
        {{- end }}
        readinessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 60
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if and (.Values.global.openshift) (not .Values.global.securityContext) }}
      securityContext: {{ default "{}" }}
      {{- else }}
      {{- if and (.Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- else }}
      {{- if and (not .Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.gate.config.saml.enabled }}
      - secret:
          secretName: {{ .Values.gate.config.saml.jksSecretName }}
        name: saml-jks
      - secret:
          secretName: {{ .Values.gate.config.saml.metadataSecretName }}
        name: metadata-xml
      {{- end }}
      {{- if .Values.global.customCerts.enabled }}
      - name: cacerts
        secret:
          secretName: {{ .Values.global.customCerts.secretName }}
          items:
          - key: cacerts
            path: cacerts
      {{- end }}
      {{- if .Values.global.autoConfiguration.enabled }}
      - secret:
          secretName: oes-gate-config
        name: config-temp
      - emptyDir: {}
        name: gate-volume
      {{- else }}
      - name: gate-volume
        secret:
          secretName: oes-gate-config
      {{- end }}
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-volume
{{- end -}}
