{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "isd.standard-annotations" . | indent 4 }}
  labels:
    app: oes
    component: gate
{{ include "oes.standard-labels" . | indent 4 }}
  name: oes-gate
spec:
  replicas: {{ .Values.gate.replicas }}
  selector:
    matchLabels:
      app: oes
      component: gate
  template:
    metadata:
      annotations:
        checksum/secret: {{ (.Files.Glob "config/oes-gate/gate.yml").AsConfig | sha256sum }}
{{- if .Values.gate.annotations -}}
        {{ toYaml .Values.gate.annotations | nindent 8 }}
{{- end }}
      labels:
        app: oes
        component: gate
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      {{- if .Values.global.autoConfiguration.enabled }}
      initContainers:
      - env:
        - name: EXTERNAL_IP_CHECK_DELAY
          value: "{{ .Values.global.autoConfiguration.initContainer.externalIpCheckDelay}}"
        image: {{ .Values.global.autoConfiguration.initContainer.image}}
        imagePullPolicy: {{ .Values.global.autoConfiguration.initContainer.pullPolicy}}
        name: gate-autoconfig
        command: ["/home/config_endpoint.sh"]
        args: ["oes-gate"] 
      {{- end }}
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK âœ“'
            sed -e "s@PGPASSWORD@$OPSMX_POSTGRESQL_PASS@g" /opsmx/conf/gate.yml > /tmp/conf/gate.yml
            sed -i "s@REDISPASSWORD@$OPSMX_REDIS_PASS@g" /tmp/conf/gate.yml
            echo success        
        env:
        - name: OPSMX_POSTGRESQL_PASS
          valueFrom:
            secretKeyRef:
              key: pgpassword
              name: oes-db
        - name: OPSMX_REDIS_PASS
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: oes-redis
        volumeMounts:
        - mountPath: /opsmx/conf/
          name: config-volume
        - mountPath: /tmp/conf/
          name: gate-volume
      containers:
      - image: {{ template "gate.image" . }}
        name: oes-gate
        env:
        - name: spring_profiles_active
          value: vault,local
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        ports:
        - containerPort: 8084
          protocol: TCP
        resources:
{{ toYaml .Values.gate.resources | indent 12 }}
        volumeMounts:
        - name: gate-volume
          mountPath: /opt/spinnaker/config/gate.yml
          subPath: gate.yml
        - mountPath: /opt/spinnaker/config/bootstrap.yml
          name: bootstrap-volume
          subPath: bootstrap.yml
{{- if .Values.gate.config.spring.security.saml2.enabled  }}
        - name: samlcerts
          mountPath: /opt/saml/certs
          readOnly: true
{{- end }}
        readinessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 60
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if and (.Values.global.openshift) (not .Values.global.securityContext) }}
      securityContext: {{ default "{}" }}
      {{- else }}
      {{- if and (.Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- else }}
      {{- if and (not .Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.autoConfiguration.enabled }}
      - secret:
          secretName: oes-gate-config
        name: config-temp
      - emptyDir: {}
        name: config-volume
      {{- else }}
      - name: config-volume
        secret:
          secretName: oes-gate-config
      {{- end }}
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-volume
{{- end -}}
{{- if .Values.gate.config.spring.security.saml2.enabled  }}
      - name: samlcerts
        secret:
          secretName: samlcerts
          items:
            - key: key.pem
              path: key.pem
            - key: cert.pem
              path: cert.pem      
{{- end -}}
