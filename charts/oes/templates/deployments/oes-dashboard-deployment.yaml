{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "isd.standard-annotations" . | indent 4 }}
  labels:
    app: oes
    component: dashboard
{{ include "oes.standard-labels" . | indent 4 }}
  name: oes-dashboard
spec:
  replicas: {{ .Values.dashboard.replicas }}
  selector:
    matchLabels:
      app: oes
      component: dashboard
  strategy: {}
  template:
    metadata:
      annotations:
        configmap/checksum: {{ (.Files.Glob "config/oes-dashboard/dashboard-local.yml").AsConfig | sha256sum }}
{{- if .Values.dashboard.annotations -}}
        {{ toYaml .Values.dashboard.annotations | nindent 8 }}
{{- end }}
      labels:
{{ toYaml .Values.dashboard.labels | indent 8 }}
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      {{- if not .Values.prefersecrets }}
      initContainers:
      - image: nginx:1.27.2
        name: init-secret-replacer
        command: ["bash", "-c", "cp /scripts/init-script.sh /tmp/init-script.sh && chmod +x /tmp/init-script.sh && /tmp/init-script.sh"]
        volumeMounts:
        - mountPath: /scripts
          name: script-volume
        - mountPath: /secrets/bootstrap/
          name: bootstrap-config-volume
        - mountPath: /configmaps/bootstrap/
          name: bootstrap-config-volume-old
      {{- end }}
      containers:
      - image: {{ template "dashboard.image" . }}
        name: oes-dashboard
        env:
        {{- if .Values.extraEnvVars }}
        {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 8094
          protocol: TCP
        env:
        volumeMounts:
        - mountPath: /opsmx/conf/dashboard-local.yml
          name: dashboard-config
          subPath: dashboard-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        {{- if .Values.global.customCerts.enabled }}
        - mountPath: /etc/pki/ca-trust/extracted/java/cacerts
          subPath: cacerts
          name: cacerts
        {{- end }}
        resources:
{{ toYaml .Values.dashboard.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: 8094
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8094
          initialDelaySeconds: 30
          periodSeconds: 60
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if and (.Values.global.openshift) (not .Values.global.securityContext) }}
      securityContext: {{ default "{}" }}
      {{- else }}
      {{- if and (.Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- else }}
      {{- if and (not .Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.customCerts.enabled }}
      - name: cacerts
        {{- if .Values.preferCertsAsSecret }}
        secret:
          secretName: {{ .Values.global.customCerts.secretName }}
          items:
          - key: cacerts
            path: cacerts
        {{- else }}
        configMap:
          name: {{ .Values.global.customCerts.configMapName }}
          items:
          - key: cacerts
            path: cacerts
        {{- end }}
      {{- end }}
      {{- if .Values.prefersecrets }}
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      {{- else }}
      - emptyDir: {}
        name: bootstrap-config-volume
      - name: script-volume
        configMap:
          defaultMode: 420
          name: replace-script-cm
      - configMap:
          name: bootstrap
          defaultMode: 420
        name: bootstrap-config-volume-old
      {{- end }}
      - name: dashboard-config
        configMap:
          name: oes-dashboard-config
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
{{- end -}}
