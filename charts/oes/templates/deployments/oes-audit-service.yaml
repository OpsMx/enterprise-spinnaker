{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "isd.standard-annotations" . | indent 4 }}
  labels:
    app: oes
    component: auditservice
{{ include "oes.standard-labels" . | indent 4 }}
  name: oes-audit-service
spec:
  replicas: {{ .Values.audit.replicas }}
  selector:
    matchLabels:
      app: oes
      component: auditservice
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets/oes-audit-service-secret.yaml") . | sha256sum }}
        {{ toYaml .Values.audit.annotations | nindent 8 }}
{{- end }}
      labels:
{{ toYaml .Values.audit.labels | indent 8 }}
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      {{- if (eq .Values.db.enabled true) }}
      initContainers:
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK âœ“'
      {{- end }}
      containers:
      - image: {{ template "auditservice.image" . }}
        imagePullPolicy: IfNotPresent
        name: oes-audit
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        ports:
        - containerPort: 8097
          name: backend
          protocol: TCP
        - containerPort: 19090
          name: opentelemetry
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /mgmt/health
            port: 8097
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8097
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /opsmx/conf/audit-service-local.yml
          name: audit-config-volume
          subPath: audit-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if and (.Values.global.openshift) (not .Values.global.securityContext) }}
      securityContext: {{ default "{}" }}
      {{- else }}
      {{- if and (.Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- else }}
      {{- if and (not .Values.global.openshift) (.Values.global.securityContext) }}
      securityContext:
{{ toYaml .Values.global.securityContext | indent 8 }}
      {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.customCerts.enabled }}
      - name: cacerts
        secret:
          secretName: {{ .Values.global.customCerts.secretName }}
          items:
          - key: cacerts
            path: cacerts
      {{- end }}
      volumes:
      - secret:
          items:
          - key: audit-local.yml
            path: audit-local.yml
          secretName: oes-audit-service-config
        name: audit-config-volume
      - name: bootstrap-config-volume
        secret:
          defaultMode: 420
          secretName: bootstrap
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
{{- end -}}
