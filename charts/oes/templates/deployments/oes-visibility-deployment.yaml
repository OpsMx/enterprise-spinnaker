{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
{{ include "isd.standard-annotations" . | indent 4 }}
  labels:
    app: oes
    component: visibility
{{ include "oes.standard-labels" . | indent 4 }}
  name: oes-visibility
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: visibility
  strategy: {}
  template:
    metadata:
      annotations:
        configmap/checksum: {{ (.Files.Glob "config/oes-visibility/visibility-local.yml").AsConfig | sha256sum }}
{{- if .Values.visibility.annotations -}}
        {{ toYaml .Values.visibility.annotations | nindent 8 }}
{{- end }}
      labels:
        app: oes
        component: visibility
{{ include "oes.standard-labels" . | indent 8 }}
    spec:
      {{- if (eq .Values.db.enabled true) }}
      initContainers:
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK âœ“'
            sed -e "s@PGPASSWORD@$OPSMX_POSTGRESQL_PASS@g" /opsmx/conf/visibility-local.yml > /tmp/conf/visibility-local.yml
            sed -i "s@RABBITMQPASSWORD@$RABBITMQ_DEFAULT_PASS@g" /tmp/conf/visibility-local.yml
            echo success
        env:
        - name: OPSMX_POSTGRESQL_PASS
          valueFrom:
            secretKeyRef:
              key: pgpassword
              name: oes-db
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: rabbitmqpassword
              name: rabbitmq
        volumeMounts:
        - mountPath: /opsmx/conf/
          name: visibility-config
        - mountPath: /tmp/conf/
          name: visibility-config-volume
      {{- end }}
      containers:
      - image: {{ template "visibility.image" . }}
        name: oes-visibility
        ports:
        - containerPort: 8096
          protocol: TCP
        env:
        env:
       {{- if .Values.extraEnvVars }}
       {{- include "tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 8 }}
       {{- end }}
        volumeMounts:
        - mountPath: /opsmx/conf/visibility-local.yml
          name: visibility-config-volume
          subPath: visibility-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        {{- if .Values.global.customCerts.enabled }}
        - mountPath: /etc/pki/ca-trust/extracted/java/cacerts
          subPath: cacerts
          name: cacerts
        {{- end }}
        resources:
{{ toYaml .Values.visibility.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 60
      {{- if .Values.imagePullSecret}}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret}}
      {{- end }}
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.global.affinity }}
      affinity:
{{ toYaml .Values.global.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.global.customCerts.enabled }}
      - name: cacerts
        secret:
          secretName: {{ .Values.global.customCerts.secretName }}
          items:
          - key: cacerts
            path: cacerts
      {{- end }}
      - name: visibility-config
        secret:
          secretName: oes-visibility-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
{{- end -}}
