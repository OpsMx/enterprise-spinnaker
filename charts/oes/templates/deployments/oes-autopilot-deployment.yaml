{{- if or (eq .Values.installationMode "OES-AP")  (eq .Values.installationMode "EASY") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oes-autopilot
  labels:
    app: oes
    component: autopilot
{{ include "oes.standard-labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: autopilot
  template:
    metadata:
      labels:
        app: oes
        component: autopilot
{{ include "oes.standard-labels" . | indent 8 }}
      annotations:
        configmap/checksum: {{ (.Files.Glob "config/autopilot/autopilot.properties").AsConfig | sha256sum }}
{{- if .Values.autopilot.annotations -}}
        {{ toYaml .Values.autopilot.annotations | nindent 8 }}
{{- end }}
    spec:
      volumes:
        - name: autopilot-config-volume
          configMap:
            name: oes-autopilot-config
        - secret:
            items:
            - key: bootstrap.yml
              path: bootstrap.yml
            secretName: bootstrap
          name: bootstrap-config-volume
        {{- if .Values.global.customCerts.enabled }}
        - name: cacerts
          secret:
            secretName: {{ .Values.global.customCerts.secretName }}
            items:
            - key: cacerts
              path: cacerts
        {{- end }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret}}
      {{- if .Values.autopilot.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.autopilot.nodeSelector | indent 8 }}
      {{- end }}
      {{- if (eq .Values.db.enabled true) }}
      initContainers:
      - name: db-check
        image: {{ .Values.global.customImages.registry }}/postgres:9.6.5
        command: ['/bin/bash', '-c', "sleep 30;echo Waiting for oes-db to be up and running; pg_isready -h oes-db -p 5432 && echo PostgreSQL DB is ready to receive connections"]
      {{- end }}
      containers:
        - image: {{ template "autopilot.image" . }}
          imagePullPolicy: {{ .Values.autopilot.image.pullPolicy }}
          name: oes-autopilot
          resources:
{{ toYaml .Values.autopilot.resources | indent 12 }}
          ports:
            - containerPort: 8090
              name: backend
              protocol: TCP
            - containerPort: 9090
              name: metricfetcher
              protocol: TCP
          volumeMounts:
          - name: autopilot-config-volume
            mountPath: /opsmx/conf/autopilot.properties
            subPath: autopilot.properties
          - mountPath: /opsmx/conf/bootstrap.yml
            name: bootstrap-config-volume
            subPath: bootstrap.yml
          {{- if .Values.global.customCerts.enabled }}
          - mountPath: /etc/pki/ca-trust/extracted/java/cacerts
            subPath: cacerts
            name: cacerts
          {{- end }}
          readinessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 60
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /mgmt/health
              port: 8090
            initialDelaySeconds: 120
            periodSeconds: 60
{{- end -}}
