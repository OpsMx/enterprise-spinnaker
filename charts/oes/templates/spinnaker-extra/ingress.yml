{{- if (.Values.installSpinnaker) }}
{{- if .Values.spinnaker.gitopsHalyard.mTLS.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ .Release.Namespace }}/mtlscerts-pkcs12
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: spin-deck.{{ .Release.Namespace }}.svc
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
  name: spinnaker-deck-ingress
spec:
  rules:
  - host: {{ .Values.spinnaker.ingress.host }}
    http:
      paths:
      - backend:
          service:
            name: spin-deck
            port:
              number: 9000
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - {{ .Values.spinnaker.ingress.host }}
    secretName: ui-{{ .Release.Name }}-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
{{- if .Values.ingressGate.annotations }}
{{ toYaml .Values.ingressGate.annotations | indent 4 }}
{{- end }}
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-ssl-secret: {{ .Release.Namespace }}/mtlscerts-pkcs12
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: spin-gate.{{ .Release.Namespace }}.svc
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
  name: spinnaker-gate-ingress
spec:
  rules:
  - host: {{ tpl .Values.spinnaker.ingressGate.host . }}
    http:
      paths:
      - backend:
          service:
            name: spin-gate
            port:
              number: 8084
        path: /
        pathType: ImplementationSpecific
      - backend:
          service:
            name: spin-gate
            port:
              number: 8084
        path: /login
        pathType: ImplementationSpecific
      - backend:
          service:
            name: spin-gate
            port:
              number: 8084
        path: /auth/*
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - {{ .Values.spinnaker.ingressGate.host }}
    secretName: api-{{ .Release.Name }}-tls
{{- end }}
{{- end }}
