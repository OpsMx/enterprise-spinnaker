---
# Source: oes/templates/custom-stages/visibility-customstage-cm.yaml
apiVersion: v1
data:
  run.sh: |
        #!/bin/sh
        set -x

        echo "$gateurl"

        cat << EOT > visibility.json
        {
            "approvalCallbackURL": "",
            "rejectionCallbackURL": "",
            "toolConnectorParameteres": []
        }
        EOT

        JIRAID1="$jiraid1"
        JIRAID2="$jiraid2"

        REPO="$gitrepo"
        COMMITID1="$gitcommitid1"
        COMMITID2="$gitcommitid2"

        JOB="$jenkinsjob"
        BUILDID1="$jenkinsbuild1"
        BUILDID2="$jenkinsbuild2"

        CANARYID="$canaryid"

        PROJECTKEY="$projectkey"


        if [ -z $JIRAID1 ]
        then
               echo "not specified JIRAID"
        else
               jq --argjson  toolConnectorParameteres '{"connectorType": "JIRA","parameters": [{"key": "jira_ticket_no","value": "JIRAID1"},{"key": "jira_ticket_no","value": "JIRAID2"}]}' '.toolConnectorParameteres += [$toolConnectorParameteres]' visibility.json > final.json
               sed -i 's/JIRAID1/'$JIRAID1'/g' final.json
               sed -i 's/JIRAID2/'$JIRAID2'/g' final.json
        rm -rf visibility.json
        mv final.json visibility.json
        fi

        if [ -z $REPO ]
        then
              echo "not specified REPO"
        else
              jq --argjson  toolConnectorParameteres '{"connectorType": "GIT","parameters": [{"key": "repo","value": "REPO"},{"key": "commitId","value": "COMMITID1"},{"key": "commitId","value": "COMMITID2"}]}' '.toolConnectorParameteres += [$toolConnectorParameteres]' visibility.json > final.json
              sed -i 's/REPO/'$REPO'/g' final.json
              sed -i 's/COMMITID1/'$COMMITID1'/g' final.json
              sed -i 's/COMMITID2/'$COMMITID2'/g' final.json
              rm -rf visibility.json
              mv final.json visibility.json
        fi

        if [ -z $JOB ]
        then
             echo "not specified JOB"
        else
             jq --argjson  toolConnectorParameteres '{"connectorType": "JENKINS","parameters": [{"key": "job","value": "JOB"},{"key": "buildId","value": "BUILDID1"},{"key": "buildId","value": "BUILDID2"}]}' '.toolConnectorParameteres += [$toolConnectorParameteres]' visibility.json > final.json
             sed -i 's/JOB/'$JOB'/g' final.json
             sed -i 's/BUILDID1/'$BUILDID1'/g' final.json
             sed -i 's/BUILDID2/'$BUILDID2'/g' final.json
             rm -rf visibility.json
             mv final.json visibility.json
        fi

        if [ -z $CANARYID ]
        then
             echo "not specified the CANARY"
        else
             jq --argjson  toolConnectorParameteres '{"connectorType": "AUTOPILOT","parameters": [{"key": "canaryId","value": "CANARYID"}]}' '.toolConnectorParameteres += [$toolConnectorParameteres]' visibility.json > final.json
             sed -i 's/CANARYID/'$CANARYID'/g' final.json
             rm -rf visibility.json
             mv final.json visibility.json
        fi

        if [ -z $PROJECTKEY ]
        then
            echo "not specified the PROJECTKEY"
        else
            jq --argjson  toolConnectorParameteres '{"connectorType": "SONARQUBE","parameters": [{"key": "projectKey","value": "PROJECTKEY"}]}' '.toolConnectorParameteres += [$toolConnectorParameteres]' visibility.json > final.json
            sed -i 's/PROJECTKEY/'$PROJECTKEY'/g' final.json
            rm -rf visibility.json
            mv final.json visibility.json
        fi
        cat visibility.json
        curl -vX POST "$gateurl" -d@visibility.json --header "Content-Type: application/json" -D header.txt > postrequest.json
        httpstatus=$(cat header.txt | grep "HTTP/" | cut -d " " -f 2)
        if [ "$httpstatus" != "202" ]
        then
        echo "========= EXECUTION FAILED ========"
        exit 1
        fi
        cat header.txt
        responseurlN=$(cat header.txt | grep location: | cut -d " " -f 2)
        echo "Response URL: $responseurlN"
        responseurl=$(echo $responseurlN | sed 's/.$//')
        echo "Calling curl with $responseurl"
        echo "curl GET $responseurl  Content-Type: application/json"
        curl -sovX GET "$responseurl" --header "Content-Type: application/json" > initialstatus.json
        status=$(cat initialstatus.json | jq '.status' -r)
        echo $status
        while [ "$status" = "activated" ]; do
        echo "staus is activated"
        curl -sovX GET $responseurl --header "Content-Type: application/json" > status.json
        statusui=$(cat status.json | jq '.status' -r)
        export status=$statusui
        echo "$status"
        if [ "$status" = "approved" ]
           then
                  echo "success"
                  exit 0
        elif [ "$status" = "rejected" ]
            then
                  echo "failed"
                  exit 1
        fi
            sleep 1
        done
kind: ConfigMap
metadata:
  name: visibility-config
  namespace: default
